import requestsfrom modular import PSR as shiftTypeDatafrom modular.GetApplication import get_valuefrom modular.PSR.MultipartFormData import MultipartFormDatafrom modular.Process.OAProcess import processSqlfrom modular.SFT.enums.shiptype import ShipTypefrom modular.goods.OAGoods import goodsSqlfrom modular.login import OALoginglobal oa_urloa_url = get_value('wsp_url','url')# oa_url='http://apiewms-dev.banggood.cn/'# oa_url='http://172.16.6.203:8092/'# oa_url='http://172.16.6.32:8092/'class createPSR():    def __init__(self,oa_url):        self.oa_url=oa_url        token = OALogin.oaLoginGetToken()        self.headers = {            "Host": oa_url.split('/')[2],            "Proxy-Connection": "keep-alive",            "Content-Length": "764",            "Accept": "application/json, text/plain, */*",            # "User-Agent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",            "Origin": oa_url,            "Referer": oa_url,            # "Origin": 'http://ewms-dev.banggood.cn:8088',            # "Referer": 'http://ewms-dev.banggood.cn:8088',            "Accept-Encoding": "gzip, deflate",            "Accept-Language": "zh-CN,zh;q=0.9",            "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundarywNtULNA8KNlc46BV",            "Cookie": 'Authorization="'+token+'"'        }        self.psr_path_url = oa_url+ '/warehouse/product/shift/request/createProductShiftRequestEwmsOnly?userId=33970&hostUrl='+oa_url.split('/')[2]    def postPsr(self,post_data):        """        只是组装参数与调用接口，接口返回的数据没有具体单号，        :param post_data:        :return:没有具体数据返回的        """        count = int(post_data['count_num'])        product_num = post_data['product_num']        find_process = processSql()        source_process_id = post_data['source_process_id']        source_process_name = find_process.findOaProcessNameByID(source_process_id)        source_storage= find_process.findOaStorageByProcessID(source_process_id)        source_storage_id= source_storage['storage_id']        source_storage_name= source_storage['storage_name']        targer_process_id = post_data['targer_process_id']        targer_process_name = find_process.findOaProcessNameByID(targer_process_id)        targer_storage= find_process.findOaStorageByProcessID(targer_process_id)        # targer_storage_id= targer_storage['storage_id']        # targer_storage_name= targer_storage['storage_name']        sku_code = post_data['sku_code']        sku_id = post_data['sku_id']        poa_code = post_data['poa_code']        poa_id = post_data['poa_id']        shift_type = post_data['goods_type']        ship_type = ShipType[post_data['ship_type']].value        self.data = {            "productShiftRequestCreateVOS": [                {"shiftType": shift_type,                 "priorityLevel": "0", "shipType": ship_type,                 "processCenterId": targer_process_id,                 "sourceProcessCenterId": source_process_id,                 "remark": "自写接口调用",                 "sourceProcessCenterName": source_process_name,                 "processCenterName": targer_process_name,                 "salePlatform": "", "currentPostMoney": "", "linkUrl": "", "orderNum": "",                 "salePrice": "", "grossMoney": "", "currentPostMoneyCurrency": "",                 "salePriceCurrency": "",                 "quantity": product_num,                 "productId": sku_id,                 "propertyId": poa_id,                 "storageQuantity": 3482,                 "originStorageId": source_storage_id,                 "originStorageName": targer_process_name,                 "productCode": sku_code,                 "productName": "xxx","amazonShop": "chengxidianzi01",                 "propertyCode": poa_code,                 "transferPrice": 18,                 "deliveryProductCode": "X000UOZH1B2"},]        }        mh = MultipartFormData.format(data=self.data, headers=self.headers)        i = 0        retry = False        # 调用前需要修改wsp处理中心的卡控逻辑        while i < count:            i += 1            res = requests.request("POST", data=mh.encode('utf-8'), headers=self.headers,verify=False,                                   url=self.psr_path_url)            error = res.json()['errorInfos']            if res.json()['errorInfos'] is None:                continue            error = error[0]['msg']            oa_db =goodsSql()            if error == '登陆超时，请刷新网页重新登陆':                token = OALogin.oaLoginGetToken()                self.headers['Cookie'] = 'Authorization="'+token+'"'                retry = True            elif error.find('没有AMZ经理')!=-1:                oa_db.updateGoodsAMZ(sku_id)  #补充AMZ经理                retry = True            elif error.find('处理中心转运配置')!=-1:                oa_db.inserProcessCenterTransShipPrice(source_process_id,targer_process_id,post_data['ship_type'])                retry = True            else:                raise  AssertionError("创建调拨请求报错，报错原因：{0}".format( error))            if retry:                res = requests.request("POST", data=mh.encode('utf-8'), headers=self.headers,verify=False,                                       url=self.psr_path_url)                retry = False        return res# headers = {##     "Host": "172.16.6.203:8092",#     "Proxy-Connection": "keep-alive",#     "Content-Length": 764,#     "Accept": "application/json, text/plain, */*",#     "User-Agent": "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36",#     "Origin": oa_url,#     "Referer": oa_url,#     "Accept-Encoding": "gzip, deflate",#     "Accept-Language": "zh-CN,zh;q=0.9",#     "Content-Type": "multipart/form-data; boundary=----WebKitFormBoundarywNtULNA8KNlc46BV",#     "Cookie": 'Authorization="Bearer AT-3469-ggZB_sApjQuzYyBIu75OdiIcCFCJundA"'# }# shiftType=0 普通调拨# data = {#     "productShiftRequestCreateVOS": [{"shiftType": "0", "priorityLevel": "0", "shipType": "3", "processCenterId": "934",#                                     "sourceProcessCenterId": "1040", "remark": "POA4235465",#                                     "sourceProcessCenterName": "香港处理中心", "processCenterName": "东莞处理中心",#                                     "salePlatform": "", "currentPostMoney": "", "linkUrl": "", "orderNum": "",#                                     "salePrice": "", "grossMoney": "", "currentPostMoneyCurrency": "",#                                     "salePriceCurrency": "", "quantity": "10", "productId": 1589175,#                                     "propertyId": 4245101, "storageQuantity": 3482, "originStorageId": 370,#                                     "originStorageName": "香港发货仓库", "productCode": "SKUB16136", "productName": "xxx",#                                     "propertyCode": "POA4235465", "transferPrice": 18}]## }# shiftType=4 FBA调拨FBA_data = {    "productShiftRequestCreateVOS": [{"shiftType": "4", "priorityLevel": "0", "shipType": "3", "processCenterId": "903",                                    "sourceProcessCenterId": "1040", "remark": "POA4235465",                                    "sourceProcessCenterName": "香港处理中心", "processCenterName": "法国FBA处理中心",                                    "salePlatform": "", "currentPostMoney": "", "linkUrl": "", "orderNum": "",                                    "salePrice": "", "grossMoney": "", "currentPostMoneyCurrency": "",                                    "salePriceCurrency": "", "quantity": "10", "productId": 1589175,                                    "propertyId": 4245101, "storageQuantity": 3482, "originStorageId": 370,                                    "originStorageName": "香港发货仓库", "productCode": "SKUB16136", "productName": "xxx",                                    "propertyCode": "POA4235465", "transferPrice": 18}]}# FBC_data=shiftTypeData.return_api_FBC_data(is_poa=False)# mh = MultipartFormData.format(data=FBC_data, headers=headers)# print(mh)if __name__=="__main__":    isThird=True    # mh = MultipartFormData.format(data=FBC_data, headers=headers)    # print(mh)    # for i in range(5):    #     if isThird:    #         res=requests.request("POST",data=mh.encode('utf-8'),headers=headers,url=oa_url+'/warehouse/product/shift/request/createProductShiftRequestEwmsOnly?userId=33970&hostUrl=172.16.6.203:4600')    #     else:    #         res=requests.request("POST",data=mh.encode('utf-8'),headers=headers,url=oa_url+'warehouse/product/shift/request/createProductShiftRequest?userId=15182&hostUrl=172.16.6.203:4600')    #     print(oa_url+'warehouse/product/shift/requ')    #     print(res.text)